Table Expression: Named query expression representing a Table

Four types
	-Derived Table (table subqueries)
	-Common Table Expressions (CTEs)
	-Views
	-In-line table-valued functions (TVFs)
	
	-Derived Table (table subqueries)
		Derived tables (also known as table subqueries) are defined in the FROM clause of an outer query
		-Their scope is the Outer Query
		
		Three requirements a table must meet to define a table expression

			-Order is not guaranteed
			-All column	s must have names
			-Unique columns
			
		Benefit of Table Expressions: You can refer to the column names of the inner query(Even those in the SELECT clause) anywhere in the outer clause

		-You can refer to arguments(such as variables) in the Table Expression
		-You cannot refer to multiple instances of the same derived table

	-Common Table Expressions (CTEs)
		Exactly like Derived tables except they are defined before they are used
		Refer to scripts and book 
		
	-Views


		VIEW OPTIONS
			-Encryption
				:available to view,stored procedures,triggers and user-defined functions(UDFs)
			-Schemabinding
				:Available to view and User Defined Functions (UDFs) only
			--CHECK OPTION option
				Views allows you to manipulate data in the object they were created from??
				
	-In-line table-valued functions (inline TVFs)
		These are like views with the addition of being able to accept parameters
			(i.e. Parameterized View) This is not the official name though
	
	NB: Derived tables and CTEs have a limited scope to the outer query
		View and In-line Table-valued functions(TVFs) are permanent objects in the database

		NB: Views and In-line table-valued functions (TVFs) are stored permanently in the database
		They are reusable
	

APPLY operator
	The Standard SQL version is LATERAL